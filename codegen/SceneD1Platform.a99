**************
* Dragon's Lair for the TI-99/4A - by M.Brent aka Tursi
* A big extension of my AV Playback code, as below
* Licensed by Digital Leisure - holy crap!
* A real licensed release of a major property in 2017... I mean 2018...
* I mean 2019. Damn it. ;)
**************
* Scene ?
* Enter at >601C via BL to trampret, returns to videopage which should be right
* On return, R14 has the game over video start, and R15 its length, if needed
**************
*
* To make a new scene, update CARTPAGE for the new location.
* Write the new SCENEDATA, add it to UpdateGfx.CMD (build and merge)
* and update CommonCode.a99 (VIDEOFFSET)
*

** this is used by all code that needs to return to the code page
CARTPAGE EQU >603C

	COPY "D:\work\ti\dragonslair\code\CommonCode.a99"
	COPY "D:\work\ti\dragonslair\code\SceneCommon.a99"
	
* table layout...
* start frame, frame count (byte), death? (byte), valid joystick (byte), good joystick (byte), 
* hint sprites, good scene, bad scene, timeout scene, score
*
* start frame - the page index of the first frame
* frame count - the number of frames in the clip
* death?      - if zero, survive after clip, else this is a death clip
* valid joyst - the mask of joystick bits to test for
* good joyst  - submask of valid joystick bits that indicate success (if not in here, then death)
* hint sprite - the address of the sprite table (ready to write to VDP) if hints are on
* good scene  - the next scene to play on success (if 0, end of sequence)
* bad scene   - the next scene to play on failure
* timeout sc  - the next scene to play after timeout
* score		  - score to add for this scene starting (stored the same 0-99 method as score is) 
* 				Make sure the first scene is always 49 points
*

** First label MUST be called SCENEDATA. The rest are whatever you want.
** First two words of a new scene are the ressurection start page and number of frames
** Next two words are the game over crumbling skeleton scene and number of frames
*
* joystick bits:
*   JOYUP    EQU >1000
*   JOYDOWN  EQU >0800
*   JOYLEFT  EQU >0200
*   JOYRIGHT EQU >0400
*   JOYFIRE  EQU >0100
*
** start frame, frame count (byte), death? (byte), valid joystick (byte), good joystick (byte), 
** hint sprites, good scene, bad scene, timeout scene, score
SCENEDATA
od scene, bad scene, timeout scene, score
SCENEDATA
	DATA >1B83,21										* ressurection
	DATA >1C3E,31										* game over

** scenes **
A1B98
	DATA >1B98,>2800,>VG,HINT?,Agood,Abad,Atime,49		* Intro (49)
A1BC0
	DATA >1BC0,>1600,>VG,HINT?,Agood,Abad,Atime,0		* falling (jump at 1BC3-1BC5, 1BC9-1BCB, 1BCF-1BD1) left (L, UD dies)
A1BD6
	DATA >1BD6,>0F00,>VG,HINT?,Agood,Abad,Atime,49		* In-between (49)
A1BE5
	DATA >1BE5,>1600,>VG,HINT?,Agood,Abad,Atime,0		* falling (jump at 1BE8-1BEA, 1BEE-1BF0, 1BF3-1BF5) right (R, UD dies)
A1BFB
	DATA >1BFB,>1000,>VG,HINT?,Agood,Abad,Atime,1939		* In-between (1939)
A1C0B
	DATA >1C0B,>1500,>VG,HINT?,Agood,Abad,Atime,0		* falling (jump at 1C0D-1C0F, 1C13-1C15, 1C19-1C1B) left (L, UD dies)
A1C20
	DATA >1C20,>1E00,>VG,HINT?,Agood,Abad,Atime,0		* platform lands on ground (death)

** deaths **

A1C5D
	DATA >1C5D,>16FF,>0000,HINTNONE,>0000,>0000,>0000,0		* mistimed jump

A1C73
	DATA >1C73,>2CFF,>0000,HINTNONE,>0000,>0000,>0000,0		* Successful jump (3255)


	END
